From 1d4b244080949081319fc8310c6722d87e64f0cf Mon Sep 17 00:00:00 2001
From: Arne Caspari <arne@unicap-imaging.org>
Date: Thu, 7 Jul 2016 09:11:32 +0200
Subject: [PATCH] Fix compile issues against current libavcodec

---
 src/image_gif.c               | 35 +++++++++++++++++------------------
 src/libdlna/audio_aac.c       |  2 +-
 src/libdlna/audio_ac3.c       |  2 +-
 src/libdlna/audio_amr.c       |  4 ++--
 src/libdlna/audio_atrac3.c    |  2 +-
 src/libdlna/audio_g726.c      |  2 +-
 src/libdlna/audio_lpcm.c      |  4 ++--
 src/libdlna/audio_mp1.c       |  2 +-
 src/libdlna/audio_mp2.c       |  2 +-
 src/libdlna/audio_mp3.c       |  2 +-
 src/libdlna/audio_wma.c       |  2 +-
 src/libdlna/av_mpeg1.c        |  4 ++--
 src/libdlna/av_mpeg2.c        |  6 +++---
 src/libdlna/av_mpeg4_part10.c |  2 +-
 src/libdlna/av_mpeg4_part2.c  | 14 +++++++-------
 src/libdlna/av_wmv9.c         |  2 +-
 src/mediascan.c               |  2 +-
 src/result.c                  |  2 +-
 src/video.c                   |  6 +++---
 19 files changed, 48 insertions(+), 49 deletions(-)

diff --git a/src/image_gif.c b/src/image_gif.c
index 3ac5bd7..fe3d5f3 100644
--- a/src/image_gif.c
+++ b/src/image_gif.c
@@ -48,7 +48,7 @@ int image_gif_read_header(MediaScanImage *i, MediaScanResult *r, int is_gif89) {
   g->buf = (Buffer *)r->_buf;
   g->fp = r->_fp;
 
-  g->gif = DGifOpen(i, image_gif_read_buf);
+  g->gif = DGifOpen(i, image_gif_read_buf, NULL);
 
   if (g->gif == NULL) {
     PrintGifError();
@@ -166,20 +166,19 @@ int image_gif_load(MediaScanImage *i) {
         break;
 
       case EXTENSION_RECORD_TYPE:
-        if (DGifGetExtension(g->gif, &temp_save.Function, &ExtData) == GIF_ERROR) {
-          PrintGifError();
-          LOG_ERROR("Image::Scale unable to read GIF file (%s)\n", i->path);
-          goto err;
-        }
-
-        if (temp_save.Function == 0xF9) { // transparency info
-          if (ExtData[1] & 1)
-            trans_index = ExtData[4];
-          else
-            trans_index = -1;
-          i->has_alpha = 1;
-          LOG_DEBUG("GIF transparency index: %d\n", trans_index);
-        }
+      {
+	int function = 0x00;
+	if (temp_save.ExtensionBlockCount >= 1){
+	  function = temp_save.ExtensionBlocks[0].Function;
+	  if (function == 0xF9) { // transparency info
+	    if (ExtData[1] & 1)
+	      trans_index = ExtData[4];
+	    else
+	      trans_index = -1;
+	    i->has_alpha = 1;
+	    LOG_DEBUG("GIF transparency index: %d\n", trans_index);
+	  }
+	}
 
         while (ExtData != NULL) {
           /* Create an extension block with our data */
@@ -195,9 +194,9 @@ int image_gif_load(MediaScanImage *i) {
             goto err;
           }
 
-          temp_save.Function = 0;
         }
-        break;
+      }
+      break;
 
       case TERMINATE_RECORD_TYPE:
       default:
@@ -222,7 +221,7 @@ void image_gif_destroy(MediaScanImage *i) {
   if (i->_gif) {
     GIFData *g = (GIFData *)i->_gif;
 
-    if (DGifCloseFile(g->gif) != GIF_OK) {
+    if (DGifCloseFile(g->gif, NULL) != GIF_OK) {
       PrintGifError();
       LOG_ERROR("Unable to close GIF file (%s)\n", i->path);
     }
diff --git a/src/libdlna/audio_aac.c b/src/libdlna/audio_aac.c
index 0454daf..67798ab 100644
--- a/src/libdlna/audio_aac.c
+++ b/src/libdlna/audio_aac.c
@@ -315,7 +315,7 @@ audio_profile_guess_aac_priv (AVCodecContext *ac, aac_object_type_t type)
     return AUDIO_PROFILE_INVALID;
 
   /* check for AAC variants codec */
-  if (ac->codec_id != CODEC_ID_AAC)
+  if (ac->codec_id != AV_CODEC_ID_AAC)
     return AUDIO_PROFILE_INVALID;
   
   switch (type)
diff --git a/src/libdlna/audio_ac3.c b/src/libdlna/audio_ac3.c
index 474537a..ceb1f00 100644
--- a/src/libdlna/audio_ac3.c
+++ b/src/libdlna/audio_ac3.c
@@ -39,7 +39,7 @@ audio_profile_guess_ac3 (AVCodecContext *ac)
     return AUDIO_PROFILE_INVALID;
 
   /* check for AC3 codec */
-  if (ac->codec_id != CODEC_ID_AC3)
+  if (ac->codec_id != AV_CODEC_ID_AC3)
     return AUDIO_PROFILE_INVALID;
   
   /* supported channels: 1/0, 2/0, 3/0, 2/1, 3/1, 2/2, 3/2 */
diff --git a/src/libdlna/audio_amr.c b/src/libdlna/audio_amr.c
index 98bc4d3..78c68b2 100644
--- a/src/libdlna/audio_amr.c
+++ b/src/libdlna/audio_amr.c
@@ -53,7 +53,7 @@ audio_is_valid_amr (AVCodecContext *ac)
   if (!ac)
     return 0;
 
-  if (ac->codec_id != CODEC_ID_AMR_NB)
+  if (ac->codec_id != AV_CODEC_ID_AMR_NB)
     return 0;
   
   /* only mono is supported */
@@ -89,7 +89,7 @@ audio_is_valid_amr_wb (AVCodecContext *ac)
   if (!ac)
     return 0;
 
-  if (ac->codec_id != CODEC_ID_AMR_WB)
+  if (ac->codec_id != AV_CODEC_ID_AMR_WB)
     return 0;
   
   /* valid sampling rates: 8, 16, 24, 32 and 48 kHz */
diff --git a/src/libdlna/audio_atrac3.c b/src/libdlna/audio_atrac3.c
index 18e2e53..6efed8d 100644
--- a/src/libdlna/audio_atrac3.c
+++ b/src/libdlna/audio_atrac3.c
@@ -39,7 +39,7 @@ audio_profile_guess_atrac (AVCodecContext *ac)
     return AUDIO_PROFILE_INVALID;
 
 #if LIBAVCODEC_VERSION_INT >= ((51<<16)+(40<<8)+4)
-  if (ac->codec_id == CODEC_ID_ATRAC3)
+  if (ac->codec_id == AV_CODEC_ID_ATRAC3)
     return AUDIO_PROFILE_ATRAC;
 #endif
 
diff --git a/src/libdlna/audio_g726.c b/src/libdlna/audio_g726.c
index 98e0a17..71bc142 100644
--- a/src/libdlna/audio_g726.c
+++ b/src/libdlna/audio_g726.c
@@ -31,7 +31,7 @@ audio_profile_guess_g726 (AVCodecContext *ac)
   if (!ac)
     return AUDIO_PROFILE_INVALID;
 
-  if (ac->codec_id != CODEC_ID_ADPCM_G726)
+  if (ac->codec_id != AV_CODEC_ID_ADPCM_G726)
     return AUDIO_PROFILE_INVALID;
   
   if (ac->channels != 1)
diff --git a/src/libdlna/audio_lpcm.c b/src/libdlna/audio_lpcm.c
index 8d6c1b5..015d722 100644
--- a/src/libdlna/audio_lpcm.c
+++ b/src/libdlna/audio_lpcm.c
@@ -50,8 +50,8 @@ audio_profile_guess_lpcm (AVCodecContext *ac)
     return AUDIO_PROFILE_INVALID;
 
   /* check for 16-bit signed network-endian PCM codec  */
-  if (ac->codec_id != CODEC_ID_PCM_S16BE &&
-      ac->codec_id != CODEC_ID_PCM_S16LE)
+  if (ac->codec_id != AV_CODEC_ID_PCM_S16BE &&
+      ac->codec_id != AV_CODEC_ID_PCM_S16LE)
     return AUDIO_PROFILE_INVALID;
 
   /* supported channels: mono or stereo */
diff --git a/src/libdlna/audio_mp1.c b/src/libdlna/audio_mp1.c
index 9acf70c..328e705 100644
--- a/src/libdlna/audio_mp1.c
+++ b/src/libdlna/audio_mp1.c
@@ -31,7 +31,7 @@ audio_profile_guess_mp1 (AVCodecContext *ac)
   if (!ac)
     return AUDIO_PROFILE_INVALID;
 
-  if (ac->codec_id != CODEC_ID_MP1)
+  if (ac->codec_id != AV_CODEC_ID_MP1)
     return AUDIO_PROFILE_INVALID;
   
   if (ac->channels > 5)
diff --git a/src/libdlna/audio_mp2.c b/src/libdlna/audio_mp2.c
index 2a58f78..4c65d87 100644
--- a/src/libdlna/audio_mp2.c
+++ b/src/libdlna/audio_mp2.c
@@ -31,7 +31,7 @@ audio_profile_guess_mp2 (AVCodecContext *ac)
   if (!ac)
     return AUDIO_PROFILE_INVALID;
 
-  if (ac->codec_id != CODEC_ID_MP2)
+  if (ac->codec_id != AV_CODEC_ID_MP2)
     return AUDIO_PROFILE_INVALID;
   
   if (ac->channels > 5)
diff --git a/src/libdlna/audio_mp3.c b/src/libdlna/audio_mp3.c
index 62193d0..06325f3 100644
--- a/src/libdlna/audio_mp3.c
+++ b/src/libdlna/audio_mp3.c
@@ -47,7 +47,7 @@ audio_is_valid_mp3_common (AVCodecContext *ac)
     return 0;
 
   /* check for MP3 codec */
-  if (ac->codec_id != CODEC_ID_MP3)
+  if (ac->codec_id != AV_CODEC_ID_MP3)
     return 0;
   
   /* only mono and stereo are supported */
diff --git a/src/libdlna/audio_wma.c b/src/libdlna/audio_wma.c
index b451ec5..595411c 100644
--- a/src/libdlna/audio_wma.c
+++ b/src/libdlna/audio_wma.c
@@ -55,7 +55,7 @@ audio_profile_guess_wma (AVCodecContext *ac)
     return ap;
 
   /* check for WMA codec */
-  if (ac->codec_id != CODEC_ID_WMAV1 && ac->codec_id != CODEC_ID_WMAV2)
+  if (ac->codec_id != AV_CODEC_ID_WMAV1 && ac->codec_id != AV_CODEC_ID_WMAV2)
     return ap;
 
   if (ac->sample_rate <= 48000)
diff --git a/src/libdlna/av_mpeg1.c b/src/libdlna/av_mpeg1.c
index 9aec1b3..68350f1 100644
--- a/src/libdlna/av_mpeg1.c
+++ b/src/libdlna/av_mpeg1.c
@@ -42,7 +42,7 @@ probe_mpeg1 (AVFormatContext *ctx dlna_unused,
     return NULL;
   
   /* check for MPEG-1 video codec */
-  if (codecs->vc->codec_id != CODEC_ID_MPEG1VIDEO)
+  if (codecs->vc->codec_id != AV_CODEC_ID_MPEG1VIDEO)
     return NULL;
 
   /* video bitrate must be CBR at 1,151,929.1 bps */
@@ -72,7 +72,7 @@ probe_mpeg1 (AVFormatContext *ctx dlna_unused,
     return NULL;
 
   /* check for MPEG-1 Layer-2 audio codec */
-  if (codecs->ac->codec_id != CODEC_ID_MP2)
+  if (codecs->ac->codec_id != AV_CODEC_ID_MP2)
     return NULL;
   
   /* supported channels: stereo only */
diff --git a/src/libdlna/av_mpeg2.c b/src/libdlna/av_mpeg2.c
index 4504ef8..ae1596c 100644
--- a/src/libdlna/av_mpeg2.c
+++ b/src/libdlna/av_mpeg2.c
@@ -465,7 +465,7 @@ probe_mpeg_ts (AVFormatContext *ctx,
   int i;
   
   /* check for MPEG-2 MP@LL profile */
-  if (codecs->ac->codec_id == CODEC_ID_AAC)
+  if (codecs->ac->codec_id == AV_CODEC_ID_AAC)
   {
     /* 352x288 only */
     if (codecs->vc->width != 352 && codecs->vc->height != 288)
@@ -554,7 +554,7 @@ probe_mpeg_ts (AVFormatContext *ctx,
   if (codecs->vc->bit_rate + codecs->ac->bit_rate > 19392700)
     return NULL; 
 
-  if (codecs->ac->codec_id != CODEC_ID_AC3)
+  if (codecs->ac->codec_id != AV_CODEC_ID_AC3)
     return NULL;
 
   /* 48 KHz only */
@@ -634,7 +634,7 @@ probe_mpeg2 (AVFormatContext *ctx,
     return NULL;
   
   /* check for MPEG-2 video codec */
-  if (codecs->vc->codec_id != CODEC_ID_MPEG2VIDEO)
+  if (codecs->vc->codec_id != AV_CODEC_ID_MPEG2VIDEO)
     return NULL;
 
   switch (st)
diff --git a/src/libdlna/av_mpeg4_part10.c b/src/libdlna/av_mpeg4_part10.c
index 6a7fcea..dfa7f3e 100644
--- a/src/libdlna/av_mpeg4_part10.c
+++ b/src/libdlna/av_mpeg4_part10.c
@@ -1230,7 +1230,7 @@ probe_avc (AVFormatContext *ctx,
     return NULL;
 
   /* check for H.264/AVC codec */
-  if (codecs->vc->codec_id != CODEC_ID_H264)
+  if (codecs->vc->codec_id != AV_CODEC_ID_H264)
     return NULL;
 
   /* check for a supported container */
diff --git a/src/libdlna/av_mpeg4_part2.c b/src/libdlna/av_mpeg4_part2.c
index 05e8df9..2909525 100644
--- a/src/libdlna/av_mpeg4_part2.c
+++ b/src/libdlna/av_mpeg4_part2.c
@@ -50,13 +50,13 @@ static const struct {
   int codec_id;
   mpeg4_vcodec_type_t type;
 } avf_vcodec_mapping[] = {
-  { CODEC_ID_H263,                      MPEG4_VCODEC_H263 },
-  { CODEC_ID_H263I,                     MPEG4_VCODEC_H263 },
-  { CODEC_ID_H263P,                     MPEG4_VCODEC_H263 },
-  { CODEC_ID_MPEG4,                     MPEG4_VCODEC_P2 },
-  { CODEC_ID_MSMPEG4V1,                 MPEG4_VCODEC_P2 },
-  { CODEC_ID_MSMPEG4V2,                 MPEG4_VCODEC_P2 },
-  { CODEC_ID_MSMPEG4V3,                 MPEG4_VCODEC_P2 },
+  { AV_CODEC_ID_H263,                      MPEG4_VCODEC_H263 },
+  { AV_CODEC_ID_H263I,                     MPEG4_VCODEC_H263 },
+  { AV_CODEC_ID_H263P,                     MPEG4_VCODEC_H263 },
+  { AV_CODEC_ID_MPEG4,                     MPEG4_VCODEC_P2 },
+  { AV_CODEC_ID_MSMPEG4V1,                 MPEG4_VCODEC_P2 },
+  { AV_CODEC_ID_MSMPEG4V2,                 MPEG4_VCODEC_P2 },
+  { AV_CODEC_ID_MSMPEG4V3,                 MPEG4_VCODEC_P2 },
   { -1, 0 }
 };
    
diff --git a/src/libdlna/av_wmv9.c b/src/libdlna/av_wmv9.c
index 99ca6c8..778fff5 100644
--- a/src/libdlna/av_wmv9.c
+++ b/src/libdlna/av_wmv9.c
@@ -245,7 +245,7 @@ probe_wmv9 (AVFormatContext *ctx dlna_unused,
     return NULL;
 
   /* check for WMV3 (Simple and Main profiles) video codec */
-  if (codecs->vc->codec_id != CODEC_ID_WMV3)
+  if (codecs->vc->codec_id != AV_CODEC_ID_WMV3)
     return NULL;
 
   /* get video profile */
diff --git a/src/mediascan.c b/src/mediascan.c
index c900f1b..3a208b9 100644
--- a/src/mediascan.c
+++ b/src/mediascan.c
@@ -199,7 +199,7 @@ static void register_formats(void) {
   REGISTER_DEMUXER(MPEGVIDEO, mpegvideo);
 
   // protocols
-  REGISTER_PROTOCOL(FILE, file);
+  // REGISTER_PROTOCOL(FILE, file);
 }                               /* register_formats() */
 
 ///-------------------------------------------------------------------------------------------------
diff --git a/src/result.c b/src/result.c
index 73f52fd..a9534b6 100644
--- a/src/result.c
+++ b/src/result.c
@@ -407,7 +407,7 @@ static int scan_video(MediaScanResult *r) {
       a->codec = codecs->ac->codec_name;
     }
     // Special case for handling MP1 audio streams which FFMPEG can't identify a codec for
-    else if (codecs->ac->codec_id == CODEC_ID_MP1) {
+    else if (codecs->ac->codec_id == AV_CODEC_ID_MP1) {
       a->codec = CODEC_MP1;
     }
     else {
diff --git a/src/video.c b/src/video.c
index 351ae3b..d8cca63 100644
--- a/src/video.c
+++ b/src/video.c
@@ -165,7 +165,7 @@ MediaScanImage *video_create_image_from_frame(MediaScanVideo *v, MediaScanResult
     // use swscale to convert from source format to RGBA in our buffer with no resizing
     // XXX what scaler is fastest here when not actually resizing?
     swsc = sws_getContext(i->width, i->height, codecs->vc->pix_fmt,
-                          i->width, i->height, PIX_FMT_RGB24, SWS_FAST_BILINEAR, NULL, NULL, NULL);
+                          i->width, i->height, AV_PIX_FMT_RGB24, SWS_FAST_BILINEAR, NULL, NULL, NULL);
     if (!swsc) {
       LOG_ERROR("Unable to get swscale context\n");
       goto err;
@@ -179,7 +179,7 @@ MediaScanImage *video_create_image_from_frame(MediaScanVideo *v, MediaScanResult
 
     // XXX There is probably a way to get sws_scale to write directly to i->_pixbuf in our RGBA format
 
-    rgb_bufsize = avpicture_get_size(PIX_FMT_RGB24, i->width, i->height);
+    rgb_bufsize = avpicture_get_size(AV_PIX_FMT_RGB24, i->width, i->height);
     rgb_buffer = av_malloc(rgb_bufsize);
     if (!rgb_buffer) {
       LOG_ERROR("Couldn't allocate an RGB video buffer\n");
@@ -188,7 +188,7 @@ MediaScanImage *video_create_image_from_frame(MediaScanVideo *v, MediaScanResult
     }
     LOG_MEM("new rgb_buffer of size %d @ %p\n", rgb_bufsize, rgb_buffer);
 
-    avpicture_fill((AVPicture *)frame_rgb, rgb_buffer, PIX_FMT_RGB24, i->width, i->height);
+    avpicture_fill((AVPicture *)frame_rgb, rgb_buffer, AV_PIX_FMT_RGB24, i->width, i->height);
 
     // Convert image to RGB24
     sws_scale(swsc, frame->data, frame->linesize, 0, i->height, frame_rgb->data, frame_rgb->linesize);
-- 
2.9.0

